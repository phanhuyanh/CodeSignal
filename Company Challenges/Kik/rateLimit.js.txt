function rateLimit(sentBatches, receivedMessages, startingAllowance) {

         var merge = [];
         
         for( let i = 0 ; i < sentBatches.length ; i++ ) {
             
             merge.push([sentBatches[i],0 , i]);
             
         }
         for( let i = 0 ; i < receivedMessages.length ; i++ ){
             
             merge.push([receivedMessages[i],1 , i]);
             
         }
         
         merge.sort((a,b)=> a[0][0] - b[0][0] || b[1] - a[1] || a[2] - b[2] );
         
         var start_time = (new Date(merge[0][0][0]*1e3)).toISOString();
         
         var date_start = Date.parse(start_time.substring(0,11) + "00:00:00.000Z")/1000;
    
         var hash_id = {};
         
         for( let i = 0 ; i < merge.length ; i++ ) {
             
             for( let j = 1 ; j< merge[i][0].length ; j++ ) {
                 
                 hash_id[ merge[i][0][j] ] = startingAllowance;
                 
             }
             
         }
         
         function Init(){
             
             for(let e of Object.keys(hash_id))
                 hash_id[e] = startingAllowance;
             
         }
         
         var results = [];
         
         for( let i = 0 ; i<  merge.length ; i++ ) {
             
             let element = merge[i];
             
             if( element[0][0] - date_start >= 86400 ) {


                date_start = Math.floor(element[0][0]/86400)*86400;
                 
                Init();
                 
             }
             if( element[1]  ) 
                     hash_id[element[0][1]]++;

             else{
                     
                if( element[0].slice(1).some(e => hash_id[e] == 0 ) ) 
                         
                    results.push(element[2]);
   
                     
                else
                    for(let e of element[0].slice(1))
                        hash_id[e] = hash_id[e] ?  hash_id[e]-1 : 0 ;
                     
            }

         } 
         return results
}
