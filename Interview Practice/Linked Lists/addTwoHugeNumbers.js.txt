// Singly-linked lists are already defined with this interface:
// function ListNode(x) {
//   this.value = x;
//   this.next = null;
// }
//
function addTwoHugeNumbers(a, b) {
    var x = reverseLinkedList(a)
    var y = reverseLinkedList(b)
    var remember = 0
    var list = new ListNode(-1)
    var p = list

    while(x || y) {
        let m = ~~(x || {}).value
        let n = ~~(y || {}).value
        let r = (m + n + remember) % 1e4
        remember = (m + n + remember) / 1e4 | 0
        p = p.next = new ListNode(r)
        if(x) x = x.next
        if(y) y = y.next
    }
    if(remember) 
        p = p.next = new ListNode(remember)

    return reverseLinkedList(list.next)
}
function reverseLinkedList(l) {
    var r

    while(l) {
        if(r) {
            let node = new ListNode(l.value)
            node.next = r
            r = node
        }
        else  r = new ListNode(l.value)
        
        l = l.next
    }
    return r
}
