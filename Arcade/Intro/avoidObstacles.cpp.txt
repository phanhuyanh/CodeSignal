// Definition for arrays:
// typedef struct arr_##name {
//   int size;
//   type *arr;
// } arr_##name;
//
// arr_##name alloc_arr_##name(int len) {
//   arr_##name a = {len, len > 0 ? malloc(sizeof(type) * len) : NULL};
//   return a;
// }
//
//
int avoidObstacles(arr_integer inputArray) {
for(int i=0;i<inputArray.size-1;i++){
    for(int j=i+1;j<inputArray.size;j++){
        if(inputArray.arr[j]<inputArray.arr[i]){
            int temp=inputArray.arr[j];
            inputArray.arr[j]=inputArray.arr[i];
            inputArray.arr[i]=temp;
        }
    }
}
    
    for(int i=1;i<=inputArray.arr[inputArray.size-1]+1;i++){
        int bn=i;int dem=0;
        if(i==inputArray.arr[inputArray.size-1]+1){return i;break;}
        while(bn<=inputArray.arr[inputArray.size-1]){
        if(bn==inputArray.arr[dem]){break;}
        else{
            while(bn>inputArray.arr[dem]){
                dem++;
            }
            if(bn==inputArray.arr[dem]){;break;}
            bn+=i;
            if(bn>inputArray.arr[inputArray.size-1]){return i;break;}
            
        }
    }
       
    }

}
