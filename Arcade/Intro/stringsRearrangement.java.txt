boolean stringsRearrangement(String[] inputArray) {
    boolean[] mark = new boolean[inputArray.length];
    for(int i = 0; i < inputArray.length; i++){
        mark[i] = true;
        if(loop(mark, i, inputArray))
            return true;
        mark[i] = false;
    }
    return false;
}

boolean loop(boolean[] mark, int current, String[] inputArray){
    if(isOk(mark))
        return true;
        
    String scurrent =  inputArray[current];
    boolean isExist = false;
    for(int i = 0; i < mark.length; i++){
        if(mark[i])
            continue;
        String stmp = inputArray[i];
        if(differByOne(scurrent, stmp)){
            mark[i] = true;
            boolean c = loop(mark, i, inputArray);
            if(c == true)
                return true;
            mark[i] = false;
        }
    }
    return false;
}

boolean differByOne(String scurrent, String stmp){
    int r = 0;
    for(int i = 0; i < scurrent.length(); i++){
        if(scurrent.charAt(i) != stmp.charAt(i))
            r++;
    }
    return r == 1;
}

boolean isOk(boolean[] mark){
    for(boolean b : mark)
        if(b == false)
            return false;
    return true;
}
